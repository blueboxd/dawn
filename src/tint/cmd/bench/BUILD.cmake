# Copyright 2023 The Tint Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################
# File generated by tools/src/cmd/gen
# using the template:
#   tools/src/cmd/gen/build/BUILD.cmake.tmpl
#
# Do not modify this file directly
################################################################################

tint_add_target("cmd/bench"
  cmd/bench/bench.h
  cmd/bench/benchmark.cc
)

tint_target_add_dependencies("cmd/bench"
  "lang/core"
  "lang/core/constant"
  "lang/core/type"
  "lang/wgsl/ast"
  "lang/wgsl/program"
  "lang/wgsl/sem"
  "utils/containers"
  "utils/diagnostic"
  "utils/ice"
  "utils/id"
  "utils/macros"
  "utils/math"
  "utils/memory"
  "utils/result"
  "utils/rtti"
  "utils/symbol"
  "utils/text"
  "utils/traits"
)

tint_add_target("cmd/bench:bench_cmd"
  cmd/bench/main_bench.cc
)

tint_target_add_dependencies("cmd/bench:bench_cmd"
  "cmd/bench"
  "lang/core"
  "lang/core/constant"
  "lang/core/type"
  "lang/core:bench"
  "lang/spirv/reader/common"
  "lang/wgsl/ast"
  "lang/wgsl/program"
  "lang/wgsl/reader"
  "lang/wgsl/reader:bench"
  "lang/wgsl/sem"
  "lang/wgsl/writer"
  "lang/wgsl/writer:bench"
  "utils/containers"
  "utils/diagnostic"
  "utils/ice"
  "utils/id"
  "utils/macros"
  "utils/math"
  "utils/memory"
  "utils/reflection"
  "utils/result"
  "utils/rtti"
  "utils/rtti:bench"
  "utils/symbol"
  "utils/text"
  "utils/traits"
)

if (TINT_BUILD_GLSL_WRITER)
  tint_target_add_dependencies("cmd/bench:bench_cmd"
    "lang/glsl/writer:bench"
  )
endif(TINT_BUILD_GLSL_WRITER)

if (TINT_BUILD_HLSL_WRITER)
  tint_target_add_dependencies("cmd/bench:bench_cmd"
    "lang/hlsl/writer:bench"
  )
endif(TINT_BUILD_HLSL_WRITER)

if (TINT_BUILD_MSL_WRITER)
  tint_target_add_dependencies("cmd/bench:bench_cmd"
    "lang/msl/writer:bench"
  )
endif(TINT_BUILD_MSL_WRITER)

if (TINT_BUILD_SPV_READER)
  tint_target_add_dependencies("cmd/bench:bench_cmd"
    "lang/spirv/reader"
  )
endif(TINT_BUILD_SPV_READER)

if (TINT_BUILD_SPV_WRITER)
  tint_target_add_dependencies("cmd/bench:bench_cmd"
    "lang/spirv/writer:bench"
  )
endif(TINT_BUILD_SPV_WRITER)

tint_target_set_output_name("cmd/bench:bench_cmd" "tint_benchmark")
