// Copyright 2022 The Tint Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

////////////////////////////////////////////////////////////////////////////////
// File generated by tools/src/cmd/gen
// using the template:
//   src/tint/ast/address_space_bench.cc.tmpl
//
// Do not modify this file directly
////////////////////////////////////////////////////////////////////////////////

#include "src/tint/ast/address_space.h"

#include <array>

#include "benchmark/benchmark.h"

namespace tint::ast {
namespace {

void AddressSpaceParser(::benchmark::State& state) {
    std::array kStrings{
        "fccnctin",
        "ucti3",
        "functVon",
        "function",
        "1unction",
        "unJtqqon",
        "llun77tion",
        "ppqqivtHH",
        "prcv",
        "bivaGe",
        "private",
        "priviive",
        "8WWivate",
        "pxxvate",
        "wXkgrggup",
        "worXVup",
        "3orkgroup",
        "workgroup",
        "workgroEp",
        "woTTPkroup",
        "ddorkroxxp",
        "u44iform",
        "unSSfoVVm",
        "RniR22m",
        "uniform",
        "uFfo9m",
        "uniorm",
        "VOORRHrm",
        "straye",
        "llntrrr77ge",
        "stor4g00",
        "storage",
        "trooe",
        "zzrage",
        "siioppa1",
        "puXXh_constant",
        "pusII9_nn55nstant",
        "YusHH_coaastSSrnt",
        "push_constant",
        "pushonkkHan",
        "jush_consgRt",
        "puh_cobsant",
    };
    for (auto _ : state) {
        for (auto& str : kStrings) {
            auto result = ParseAddressSpace(str);
            benchmark::DoNotOptimize(result);
        }
    }
}

BENCHMARK(AddressSpaceParser);

}  // namespace
}  // namespace tint::ast
