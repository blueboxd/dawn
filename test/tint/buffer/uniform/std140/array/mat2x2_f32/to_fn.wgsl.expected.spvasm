; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 95
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpName %u_block_std140 "u_block_std140"
               OpMemberName %u_block_std140 0 "inner"
               OpName %mat2x2_f32 "mat2x2_f32"
               OpMemberName %mat2x2_f32 0 "col0"
               OpMemberName %mat2x2_f32 1 "col1"
               OpName %u "u"
               OpName %a "a"
               OpName %a_1 "a_1"
               OpName %b "b"
               OpName %m "m"
               OpName %c "c"
               OpName %v "v"
               OpName %d "d"
               OpName %f_1 "f_1"
               OpName %conv_mat2x2_f32 "conv_mat2x2_f32"
               OpName %val "val"
               OpName %conv_arr4_mat2x2_f32 "conv_arr4_mat2x2_f32"
               OpName %val_0 "val"
               OpName %arr "arr"
               OpName %i "i"
               OpName %var_for_index "var_for_index"
               OpName %f "f"
               OpDecorate %u_block_std140 Block
               OpMemberDecorate %u_block_std140 0 Offset 0
               OpMemberDecorate %mat2x2_f32 0 Offset 0
               OpMemberDecorate %mat2x2_f32 1 Offset 8
               OpDecorate %_arr_mat2x2_f32_uint_4 ArrayStride 16
               OpDecorate %u NonWritable
               OpDecorate %u DescriptorSet 0
               OpDecorate %u Binding 0
               OpDecorate %_arr_mat2v2float_uint_4 ArrayStride 16
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
 %mat2x2_f32 = OpTypeStruct %v2float %v2float
       %uint = OpTypeInt 32 0
     %uint_4 = OpConstant %uint 4
%_arr_mat2x2_f32_uint_4 = OpTypeArray %mat2x2_f32 %uint_4
%u_block_std140 = OpTypeStruct %_arr_mat2x2_f32_uint_4
%_ptr_Uniform_u_block_std140 = OpTypePointer Uniform %u_block_std140
          %u = OpVariable %_ptr_Uniform_u_block_std140 Uniform
       %void = OpTypeVoid
%mat2v2float = OpTypeMatrix %v2float 2
%_arr_mat2v2float_uint_4 = OpTypeArray %mat2v2float %uint_4
         %10 = OpTypeFunction %void %_arr_mat2v2float_uint_4
         %17 = OpTypeFunction %void %mat2v2float
         %21 = OpTypeFunction %void %v2float
         %25 = OpTypeFunction %void %float
         %29 = OpTypeFunction %mat2v2float %mat2x2_f32
         %36 = OpTypeFunction %_arr_mat2v2float_uint_4 %_arr_mat2x2_f32_uint_4
%_ptr_Function__arr_mat2v2float_uint_4 = OpTypePointer Function %_arr_mat2v2float_uint_4
         %42 = OpConstantNull %_arr_mat2v2float_uint_4
%_ptr_Function_uint = OpTypePointer Function %uint
         %45 = OpConstantNull %uint
       %bool = OpTypeBool
%_ptr_Function__arr_mat2x2_f32_uint_4 = OpTypePointer Function %_arr_mat2x2_f32_uint_4
         %58 = OpConstantNull %_arr_mat2x2_f32_uint_4
%_ptr_Function_mat2v2float = OpTypePointer Function %mat2v2float
%_ptr_Function_mat2x2_f32 = OpTypePointer Function %mat2x2_f32
     %uint_1 = OpConstant %uint 1
         %71 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform__arr_mat2x2_f32_uint_4 = OpTypePointer Uniform %_arr_mat2x2_f32_uint_4
%_ptr_Uniform_mat2x2_f32 = OpTypePointer Uniform %mat2x2_f32
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
          %a = OpFunction %void None %10
        %a_1 = OpFunctionParameter %_arr_mat2v2float_uint_4
         %16 = OpLabel
               OpReturn
               OpFunctionEnd
          %b = OpFunction %void None %17
          %m = OpFunctionParameter %mat2v2float
         %20 = OpLabel
               OpReturn
               OpFunctionEnd
          %c = OpFunction %void None %21
          %v = OpFunctionParameter %v2float
         %24 = OpLabel
               OpReturn
               OpFunctionEnd
          %d = OpFunction %void None %25
        %f_1 = OpFunctionParameter %float
         %28 = OpLabel
               OpReturn
               OpFunctionEnd
%conv_mat2x2_f32 = OpFunction %mat2v2float None %29
        %val = OpFunctionParameter %mat2x2_f32
         %32 = OpLabel
         %33 = OpCompositeExtract %v2float %val 0
         %34 = OpCompositeExtract %v2float %val 1
         %35 = OpCompositeConstruct %mat2v2float %33 %34
               OpReturnValue %35
               OpFunctionEnd
%conv_arr4_mat2x2_f32 = OpFunction %_arr_mat2v2float_uint_4 None %36
      %val_0 = OpFunctionParameter %_arr_mat2x2_f32_uint_4
         %39 = OpLabel
        %arr = OpVariable %_ptr_Function__arr_mat2v2float_uint_4 Function %42
          %i = OpVariable %_ptr_Function_uint Function %45
%var_for_index = OpVariable %_ptr_Function__arr_mat2x2_f32_uint_4 Function %58
               OpBranch %46
         %46 = OpLabel
               OpLoopMerge %47 %48 None
               OpBranch %49
         %49 = OpLabel
         %51 = OpLoad %uint %i
         %52 = OpULessThan %bool %51 %uint_4
         %50 = OpLogicalNot %bool %52
               OpSelectionMerge %54 None
               OpBranchConditional %50 %55 %54
         %55 = OpLabel
               OpBranch %47
         %54 = OpLabel
               OpStore %var_for_index %val_0
         %59 = OpLoad %uint %i
         %61 = OpAccessChain %_ptr_Function_mat2v2float %arr %59
         %63 = OpLoad %uint %i
         %65 = OpAccessChain %_ptr_Function_mat2x2_f32 %var_for_index %63
         %66 = OpLoad %mat2x2_f32 %65
         %62 = OpFunctionCall %mat2v2float %conv_mat2x2_f32 %66
               OpStore %61 %62
               OpBranch %48
         %48 = OpLabel
         %67 = OpLoad %uint %i
         %69 = OpIAdd %uint %67 %uint_1
               OpStore %i %69
               OpBranch %46
         %47 = OpLabel
         %70 = OpLoad %_arr_mat2v2float_uint_4 %arr
               OpReturnValue %70
               OpFunctionEnd
          %f = OpFunction %void None %71
         %73 = OpLabel
         %78 = OpAccessChain %_ptr_Uniform__arr_mat2x2_f32_uint_4 %u %uint_0
         %79 = OpLoad %_arr_mat2x2_f32_uint_4 %78
         %75 = OpFunctionCall %_arr_mat2v2float_uint_4 %conv_arr4_mat2x2_f32 %79
         %74 = OpFunctionCall %void %a %75
         %83 = OpAccessChain %_ptr_Uniform_mat2x2_f32 %u %uint_0 %uint_1
         %84 = OpLoad %mat2x2_f32 %83
         %81 = OpFunctionCall %mat2v2float %conv_mat2x2_f32 %84
         %80 = OpFunctionCall %void %b %81
         %87 = OpAccessChain %_ptr_Uniform_v2float %u %uint_0 %uint_1 %uint_0
         %88 = OpLoad %v2float %87
         %89 = OpVectorShuffle %v2float %88 %88 1 0
         %85 = OpFunctionCall %void %c %89
         %91 = OpAccessChain %_ptr_Uniform_v2float %u %uint_0 %uint_1 %uint_0
         %92 = OpLoad %v2float %91
         %93 = OpVectorShuffle %v2float %92 %92 1 0
         %94 = OpCompositeExtract %float %93 0
         %90 = OpFunctionCall %void %d %94
               OpReturn
               OpFunctionEnd
