; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 64
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpName %tint_mod "tint_mod"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_return_flag "tint_return_flag"
               OpName %tint_return_value "tint_return_value"
               OpName %f "f"
               OpName %a "a"
               OpName %b "b"
        %int = OpTypeInt 32 1
      %v3int = OpTypeVector %int 3
          %1 = OpTypeFunction %v3int %v3int %v3int
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %11 = OpConstantNull %bool
%_ptr_Function_v3int = OpTypePointer Function %v3int
         %14 = OpConstantNull %v3int
     %v3bool = OpTypeVector %bool 3
%int_n2147483648 = OpConstant %int -2147483648
         %19 = OpConstantComposite %v3int %int_n2147483648 %int_n2147483648 %int_n2147483648
     %int_n1 = OpConstant %int -1
         %22 = OpConstantComposite %v3int %int_n1 %int_n1 %int_n1
      %int_1 = OpConstant %int 1
         %27 = OpConstantComposite %v3int %int_1 %int_1 %int_1
       %uint = OpTypeInt 32 0
     %v3uint = OpTypeVector %uint 3
%uint_2147483648 = OpConstant %uint 2147483648
         %34 = OpConstantComposite %v3uint %uint_2147483648 %uint_2147483648 %uint_2147483648
         %36 = OpConstantNull %v3uint
       %true = OpConstantTrue %bool
       %void = OpTypeVoid
         %47 = OpTypeFunction %void
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
         %53 = OpConstantComposite %v3int %int_1 %int_2 %int_3
         %55 = OpConstantNull %int
      %int_5 = OpConstant %int 5
         %57 = OpConstantComposite %v3int %55 %int_5 %55
   %tint_mod = OpFunction %v3int None %1
        %lhs = OpFunctionParameter %v3int
        %rhs = OpFunctionParameter %v3int
          %7 = OpLabel
%tint_return_flag = OpVariable %_ptr_Function_bool Function %11
%tint_return_value = OpVariable %_ptr_Function_v3int Function %14
         %16 = OpIEqual %v3bool %rhs %14
         %20 = OpIEqual %v3bool %lhs %19
         %23 = OpIEqual %v3bool %rhs %22
         %24 = OpLogicalAnd %v3bool %20 %23
         %25 = OpLogicalOr %v3bool %16 %24
         %15 = OpSelect %v3int %25 %27 %rhs
         %32 = OpBitwiseOr %v3int %lhs %15
         %29 = OpBitcast %v3uint %32
         %35 = OpBitwiseAnd %v3uint %29 %34
         %37 = OpINotEqual %v3bool %35 %36
         %28 = OpAny %bool %37
               OpSelectionMerge %38 None
               OpBranchConditional %28 %39 %40
         %39 = OpLabel
               OpStore %tint_return_flag %true
         %42 = OpSDiv %v3int %lhs %15
         %43 = OpIMul %v3int %42 %15
         %44 = OpISub %v3int %lhs %43
               OpStore %tint_return_value %44
               OpBranch %38
         %40 = OpLabel
               OpStore %tint_return_flag %true
         %45 = OpSRem %v3int %lhs %15
               OpStore %tint_return_value %45
               OpBranch %38
         %38 = OpLabel
         %46 = OpLoad %v3int %tint_return_value
               OpReturnValue %46
               OpFunctionEnd
          %f = OpFunction %void None %47
         %50 = OpLabel
          %a = OpVariable %_ptr_Function_v3int Function %14
          %b = OpVariable %_ptr_Function_v3int Function %14
               OpStore %a %53
               OpStore %b %57
         %60 = OpLoad %v3int %a
         %61 = OpLoad %v3int %b
         %62 = OpLoad %v3int %b
         %63 = OpIAdd %v3int %61 %62
         %59 = OpFunctionCall %v3int %tint_mod %60 %63
               OpReturn
               OpFunctionEnd
