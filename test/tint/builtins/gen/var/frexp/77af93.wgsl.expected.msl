#include <metal_stdlib>

using namespace metal;

struct frexp_result_vec4_f32 {
  float4 fract;
  int4 exp;
};
frexp_result_vec4_f32 tint_frexp(float4 param_0) {
  frexp_result_vec4_f32 result;
  result.fract = frexp(param_0, result.exp);
  return result;
}

void frexp_77af93() {
  float4 arg_0 = float4(1.0f);
  frexp_result_vec4_f32 res = tint_frexp(arg_0);
}

struct tint_symbol {
  float4 value [[position]];
};

float4 vertex_main_inner() {
  frexp_77af93();
  return float4(0.0f);
}

vertex tint_symbol vertex_main() {
  float4 const inner_result = vertex_main_inner();
  tint_symbol wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

fragment void fragment_main() {
  frexp_77af93();
  return;
}

kernel void compute_main() {
  frexp_77af93();
  return;
}

