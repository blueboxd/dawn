#include <metal_stdlib>

using namespace metal;
void textureDimensions_d3accd(depthcube<float, access::sample> tint_symbol_1) {
  uint arg_1 = 1u;
  uint2 res = uint2(tint_symbol_1.get_width(arg_1), tint_symbol_1.get_height(arg_1));
}

struct tint_symbol {
  float4 value [[position]];
};

float4 vertex_main_inner(depthcube<float, access::sample> tint_symbol_2) {
  textureDimensions_d3accd(tint_symbol_2);
  return float4(0.0f);
}

vertex tint_symbol vertex_main(depthcube<float, access::sample> tint_symbol_3 [[texture(0)]]) {
  float4 const inner_result = vertex_main_inner(tint_symbol_3);
  tint_symbol wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

fragment void fragment_main(depthcube<float, access::sample> tint_symbol_4 [[texture(0)]]) {
  textureDimensions_d3accd(tint_symbol_4);
  return;
}

kernel void compute_main(depthcube<float, access::sample> tint_symbol_5 [[texture(0)]]) {
  textureDimensions_d3accd(tint_symbol_5);
  return;
}

